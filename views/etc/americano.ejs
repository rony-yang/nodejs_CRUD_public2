<!DOCTYPE html>
<html lang='en'>
<head>
  <meta charset='utf-8' />
  <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js'></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="js/main_contents.js"></script>
  <style>
    /* 달력 컨테이너와 추가 요소를 가로로 나란히 나타내기 위한 스타일 */
    .container {
      display: flex;
    }
    .fc .fc-daygrid-day-top {
      display: flex;
      flex-direction: row;
    }
    #calendar {
      width: 50%; /* 달력이 차지하는 너비 */
    }
    #add_contents {
      width: 25%; /* 추가 콘텐츠가 차지하는 너비 */
      padding: 0 10px; /* 좌우에 10px의 패딩 추가 */
      display: flex; /* 내부 요소를 정렬하기 위해 사용 */
      justify-content: center; /* 가운데 정렬 */
    }


  </style>
  
</head>
<body>
  <div class="container">
    <div id='calendar'></div>
    <div id='add_contents'>
      <div style="display: flex; flex-direction: column;">
        <div style="display: flex; align-items: center;"> 
          <h3 style="margin-right: 10px;">목표 :</h3>
          <input type="text" class="form-control" id="goal" value="믹스커피 끊기" style="margin-right: 10px; font-size: 1.17em;">
        </div>
        <br>
        <div style="display: flex; align-items: center;"> 
          <label for="start_date" style="margin-right: 10px;">시작일 :</label>
          <input type="date" class="form-control" id="start_date" value="2024-02-19">
        </div>
        <br>
        <p id="days_passed"></p>
        <p id="days_success"></p>
      </div>
    </div>
  </div>
</body>



<script>
    $(document).ready(function () {
      var serverRows = JSON.parse('<%- JSON.stringify(rows) %>');
      applyServerData(serverRows); // 파싱된 데이터를 함수에 전달하여 사용
      countCheckedBoxes(serverRows); // 체크된 체크박스의 수를 카운트
    });

  // 서버 데이터를 풀캘린더에 적용하는 함수
  function applyServerData(serverRows) {
    var calendarEl = document.getElementById('calendar');

    // 각 날짜 셀마다 서버 데이터를 기반으로 체크박스 설정
    calendarEl.querySelectorAll('.fc-day').forEach(function(dayElement) {
      var dateStr = dayElement.getAttribute('data-date'); // 날짜
      var checkbox = dayElement.querySelector('.calendar-checkbox'); // 체크박스

      // 서버 데이터에서 해당 날짜의 체크 여부를 가져와서 설정
      var data = serverRows.find(function(item) {
        return item.check_date === dateStr;
      });

      // 날짜 값이 있는 경우 체크박스 선택되어서 페이지 렌더링
      if (data) {
        checkbox.checked = data.is_check;
      }
    });
  }

  document.addEventListener('DOMContentLoaded', function() {
    var selectedDate = null;

    var calendarEl = document.getElementById('calendar');
    var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        selectable: true,
        dayCellContent: function(arg) {
            // 각 날짜 셀마다 날짜와 빈 체크박스를 함께 추가
            var checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.className = 'calendar-checkbox';
            checkbox.id = 'checkbox-' + arg.dateStr;
            var label = document.createElement('label');
            label.htmlFor = checkbox.id;
            label.textContent = '성공';

            // div 요소를 생성하여 날짜와 체크박스를 넣음
            var container = document.createElement('div');
            var dateDiv = document.createElement('div');
            dateDiv.appendChild(document.createTextNode(arg.dayNumberText)); // 날짜 표시
            var checkboxDiv = document.createElement('div');
            checkboxDiv.appendChild(checkbox);
            checkboxDiv.appendChild(label);
            container.appendChild(dateDiv);
            container.appendChild(checkboxDiv);

            return { html: container.innerHTML };
        },
        select: function(info) {
          // 날짜를 선택할 때 실행되는 코드
          var dateStr = info.startStr; // 선택된 날짜
          var data = { date: dateStr, checked: true }; // 체크된 상태로 저장
          save_value(data);
        },
        unselect: function() {
          // 날짜 선택 해제될 때 실행되는 코드
          if (selectedDate) {
            var dateStr = selectedDate; // 선택된 날짜
            var data = { date: dateStr, checked: false }; // 해제된 상태로 저장
            save_value(data);
            selectedDate = null; // 이전에 선택된 날짜 초기화
          }
        }
    });

    calendar.render();
});

    // DB에 체크여부 값 저장
    function save_value(data) {

      let selected_date = data.date;
      let selected_value = data.checked;

      $.ajax({
        url: "cal_checked",
        type: "POST",
        data: {
          selected_date: selected_date,
          selected_value: selected_value
        },
        success: function(result) {
          window.location.reload(); // 페이지 새로고침
        },
        error: function(request, status, error) {
          console.error(error);
        }
      });
    }

    // 현재 날짜 가져와서 디데이 설정하기
    var today = new Date(); // 현재 날짜
    var startDateInput = document.getElementById('start_date'); // 시작일
    var startDate = new Date(startDateInput.value);

    // 시작일로부터 경과한 날짜 계산
    var timeDiff = Math.abs(today.getTime() - startDate.getTime());
    var daysPassed = Math.ceil(timeDiff / (1000 * 3600 * 24));

    // 성공률 계산하기
    function countCheckedBoxes(serverRows) {
      var checkedCount = 0; // 체크된 체크박스 수 초기화

      // 서버 데이터에서 체크된 체크박스 수를 세기
      serverRows.forEach(function (row) {
          if (row.is_check) {
              checkedCount++;
          }
      });

      // 디스플레이 업데이트
      var daysPassedText1 = document.getElementById('days_passed');
      var daysPassedText2 = document.getElementById('days_success');
      var successRate = ((checkedCount / daysPassed) * 100).toFixed(2); // 성공률 계산. 소수점 둘째자리까지
      
      daysPassedText1.textContent = "시작일로부터 " + daysPassed + "일 지났고 그 중 " + checkedCount + "일 성공하였습니다.";
      daysPassedText2.textContent += "성공률은 총 " + successRate + "% 입니다.";

    }


</script>

</html>
